export function getTetromino(piece) {
    let result;
    switch (piece) {
        case "T":
            result = [[
                [0, 1, 0],
                [1, 1, 1],
                [0, 0, 0],
            ], [
                [0, 1, 0],
                [0, 1, 1],
                [0, 1, 0]
            ], [
                [0, 0, 0],
                [1, 1, 1],
                [0, 1, 0],
            ], [
                [0, 1, 0],
                [1, 1, 0],
                [0, 1, 0],
            ]];
            break;
        case "L":
            result = [[
                [0, 0, 2],
                [2, 2, 2],
                [0, 0, 0],
            ], [
                [0, 2, 0],
                [0, 2, 0],
                [0, 2, 2],
            ], [
                [0, 0, 0],
                [2, 2, 2],
                [2, 0, 0],
            ], [
                [2, 2, 0],
                [0, 2, 0],
                [0, 2, 0],
            ]];
            break;
        case "J":
            result = [[

                [3, 0, 0],
                [3, 3, 3],
                [0, 0, 0],
            ], [
                [0, 3, 3],
                [0, 3, 0],
                [0, 3, 0],
            ], [
                [0, 0, 0],
                [3, 3, 3],
                [0, 0, 3],
            ], [
                [0, 3, 0],
                [0, 3, 0],
                [3, 3, 0],
            ]];
            break;
        case "S":
            result = [[
                [0, 4, 4],
                [4, 4, 0],
                [0, 0, 0],
            ], [
                [0, 4, 0],
                [0, 4, 4],
                [0, 0, 4],
            ], [
                [0, 0, 0],
                [0, 4, 4],
                [4, 4, 0],
            ], [
                [0, 4, 0],
                [4, 4, 0],
                [4, 0, 0],
            ]];
            break;
        case "Z":
            result = [[
                [5, 5, 0],
                [0, 5, 5],
                [0, 0, 0],
            ], [
                [0, 0, 5],
                [0, 5, 5],
                [0, 5, 0],
            ], [
                [0, 0, 0],
                [5, 5, 0],
                [0, 5, 5],
            ], [
                [0, 5, 0],
                [5, 5, 0],
                [5, 0, 0],
            ]];
            break;
        case "O":
            result = [[
                [0, 6, 6],
                [0, 6, 6],
            ], [
                [0, 6, 6],
                [0, 6, 6],
            ], [
                [0, 6, 6],
                [0, 6, 6],
            ], [
                [0, 6, 6],
                [0, 6, 6],
            ]];
            break;
        case "I":
            result = [[
                [7, 7, 7, 7],
                [0, 0, 0, 0],
            ], [
                [0, 7],
                [0, 7],
                [0, 7],
                [0, 7],

            ], [
                [0, 0, 0, 0],
                [7, 7, 7, 7],
            ], [
                [7, 0],
                [7, 0],
                [7, 0],
                [7, 0],

            ]];
            break;
        default:
            throw new Error("Invalid Tetromino type!" + piece);
    }
    return result;
}